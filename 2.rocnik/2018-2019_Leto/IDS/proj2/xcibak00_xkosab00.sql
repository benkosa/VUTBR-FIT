drop table festival;
drop table stage;
drop table interpret;
drop table album;
drop table piesen;
drop table clen;
drop table uzivatel;
drop table koncert;
drop table zakaznik;
drop table cennik;
drop table vstupenka;

create table festival(
    id_festival integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    nazov varchar2(50) NOT NULL,
    miesto_konania varchar2(50) NOT NULL,
    obdobie_konania_od date NOT NULL,
    obdobie_konania_do date NOT NULL,
    kapacita_miest integer NOT NULL,
    kapacita_interpretov integer NOT NULL
);

-- vhybajuca tabulka pre rocnik (verzia festivalu, ktora ma atribut navyse pre rocnik konania)

create table stage(
    id_stage integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    nazov varchar2(50) NOT NULL,
    plocha integer NOT NULL
);

create table interpret (
    id_interpret integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    nazov varchar2(50) NOT NULL,
    zaner varchar2(50) NOT NULL,
    datum_vzniku date NOT NULL
);

create table album (
    id_album integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    nazov varchar2(50) NOT NULL,
    datum_vydania date NOT NULL
);

create table piesen (
    id_piesen integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    nazov varchar2(50) NOT NULL,
    dlzka_trvania timestamp NOT NULL
);

create table clen (
    id_clen integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    meno varchar2(50) NOT NULL,
    priezvisko varchar2(50) NOT NULL
);

create table uzivatel (
    id_uzivatel integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    prezyvka varchar2(50) NOT NULL, -- mohla by byt namiesto id - nemozu mat dvaja rovnaku prezyvku (login), v ER sme to vsak modelovali takto
    opravnenie varchar2(7) check (opravnenie in ('základ', 'admin', 'správca'))
);

create table koncert (
    id_koncert integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    nazov varchar2(50) NOT NULL,
    mesto varchar2(50) NOT NULL,
    datum_a_cas_konania date NOT NULL
);

create table zakaznik ( -- uvazuje zakaznikov z jednej krajiny
    id_zakaznik integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    meno varchar2(50) NOT NULL,
    priezvisko varchar2(50) NOT NULL,
    mesto varchar2(50) NOT NULL,
    ulica varchar2(50) NOT NULL,
    cislo_domu varchar2(50) NOT NULL,
    telefonne_cislo integer NOT NULL,
    email varchar2(50) NOT NULL
);

create table cennik (
    id_cennik integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    cena_statie integer NOT NULL,
    cena_sedenie integer NOT NULL,
    cena_vip integer NOT NULL
);

create table vstupenka (
    id_vstupenka integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1  INCREMENT BY 1) NOT NULL,
    datum_a_cas_zakupenia date NOT NULL,
    typ varchar2(7) check (typ in ('státie', 'sedenie', 'VIP'))
);

-- primarne kluce pre vsetky tabulky:
ALTER TABLE festival ADD CONSTRAINT pk_id_festival PRIMARY KEY(id_festival);
ALTER TABLE stage ADD CONSTRAINT pk_id_stage PRIMARY KEY(id_stage);
ALTER TABLE interpret ADD CONSTRAINT pk_id_interpret PRIMARY KEY(id_interpret);
ALTER TABLE album ADD CONSTRAINT pk_id_album PRIMARY KEY(id_album);
ALTER TABLE piesen ADD CONSTRAINT pk_id_piesen PRIMARY KEY(id_piesen);
ALTER TABLE clen ADD CONSTRAINT pk_id_clen PRIMARY KEY(id_clen);
ALTER TABLE uzivatel ADD CONSTRAINT pk_id_uzivatel PRIMARY KEY(id_uzivatel); -- primarnym klucom by mohla byt prezyvka, avsak v ER tak modelovana nie je
ALTER TABLE koncert ADD CONSTRAINT pk_id_koncert PRIMARY KEY(id_koncert);
ALTER TABLE zakaznik ADD CONSTRAINT pk_id_zakaznik PRIMARY KEY(id_zakaznik);
ALTER TABLE cennik ADD CONSTRAINT pk_id_cennik PRIMARY KEY(id_cennik);
ALTER TABLE vstupenka ADD CONSTRAINT pk_id_vstupenka PRIMARY KEY(id_vstupenka);

-- cuzdie kluce pre vsetky tabulky: